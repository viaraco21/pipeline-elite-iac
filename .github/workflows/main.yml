# Inicio automatico depois do git push
# Este arquivo é um exemplo de pipeline de IaC na AWS (Infrastructure as Code) utilizando Terraform, TFLint e Trivy.  

name: IaC Pipeline

on: 
  push: 
    branches:
      - main
  workflow_dispatch: 

 # Validação de acesso a aws   
env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
 # Processos de execução com o Terraform 
jobs:
  terraform-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"     
          
  ## Execucao do TFLint e Trivy - Terraform         
          
      - name: Execução do Terraform Init
        run: terraform init 
        working-directory: ./src 

      - name: Execução do Terraform Validate
        run: terraform validate
        working-directory: ./src 

      - uses: terraform-linters/setup-tflint@v4
        name: Instalação do TFLint
        with:
          tflint_version: v0.56.0

      - name: Scan do TFLint
        working-directory: ./src 
        run: | 
          tflint --init
          tflint --format=default --recursive > tflint-result.txt
        continue-on-error: true

      - name: Execução do Terraform Plan 
        working-directory: ./src 
        run: | 
          terraform plan -input=false -no-color -out=tfplan && terraform show -no-color -json tfplan > tfplan.json        
      
      - name: Executando o Trivy Scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'config'
          hide-progress: true          
          scan-ref: './src/tfplan.json'
          exit-code: '0'
          severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL 
          format: 'table'
          ignore-unfixed: true
          output: trivy-results.txt 

    ## Publica no Output do Summario      
      - name: Publish Output to Summary
        run: |
          if [[ -s ./src/tflint-result.txt ]]; then
            {
              echo "### Relatorio do TFLint"
              echo "<details><summary>Expandir</summary>"
              echo ""
              cat ./src/tflint-result.txt
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi   
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ -s trivy-results.txt ]]; then
            {
              echo "### Relatorio do Trivy"
              echo "<details><summary>Expandir</summary>"
              echo ""
              cat trivy-results.txt
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi           

    ## Execução do Deploy    
  terraform-exec:
    runs-on: ubuntu-latest
    needs: [terraform-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"
        
      - name: Execução do Terraform Init
        run: terraform init 
        working-directory: ./src 
        
      - name: Execução do Terraform Validate
        run: terraform validate
        working-directory: ./src
        
      - name: Execução do Terraform Apply
        run: terraform apply --auto-approve
        working-directory: ./src 
        
